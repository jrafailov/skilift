% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PGVdb.R
\name{PGVdb}
\alias{PGVdb}
\title{PGVdb Object}
\description{
Class representing a PGV database. Contains metadata, plots, and methods
for interacting with the database and converting to and from JSON.
}
\section{Methods}{

\code{initialize()} Initialize the PGVdb object
\code{load_json()} Load data from JSON file into metadata and plots
\code{update_datafiles_json()} Update the JSON data files
\code{to_datatable()} Convert metadata and plots to a single data table
\code{add_plots()} Add new plots to the database
\code{remove_plots()} Remove plots from the database
\code{validate()} Validate metadata and plot data
\code{create_cov_arrow()} Create coverage arrow plot JSON
\code{create_ggraph_json()} Create gGraph JSON
\code{create_gwalk_json()} Create gWalk JSON
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{json_file}}{(`character(1)`)
Path to the datafiles.json}

\item{\code{metadata}}{(`data.table`)\cr
Data table containing patient metadata}

\item{\code{plots}}{(`data.table`)\cr
Data table containing plot metadata}

\item{\code{datadir}}{(`character(1)`).}

\item{\code{publicdir}}{(`character(1)`).}

\item{\code{settings}}{(`charater(1)`).}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{json_file}}{(`character(1)`)
Path to the datafiles.json}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-PGVdb-new}{\code{PGVdb$new()}}
\item \href{#method-PGVdb-load_json}{\code{PGVdb$load_json()}}
\item \href{#method-PGVdb-update_datafiles_json}{\code{PGVdb$update_datafiles_json()}}
\item \href{#method-PGVdb-to_datatable}{\code{PGVdb$to_datatable()}}
\item \href{#method-PGVdb-add_plots}{\code{PGVdb$add_plots()}}
\item \href{#method-PGVdb-remove_plots}{\code{PGVdb$remove_plots()}}
\item \href{#method-PGVdb-validate}{\code{PGVdb$validate()}}
\item \href{#method-PGVdb-create_cov_arrow}{\code{PGVdb$create_cov_arrow()}}
\item \href{#method-PGVdb-create_ggraph_json}{\code{PGVdb$create_ggraph_json()}}
\item \href{#method-PGVdb-create_gwalk_json}{\code{PGVdb$create_gwalk_json()}}
\item \href{#method-PGVdb-init_pgv}{\code{PGVdb$init_pgv()}}
\item \href{#method-PGVdb-clone}{\code{PGVdb$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-new"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of this [R6][R6::R6Class] class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$new(json_file, datadir, publicdir, settings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{json_file}}{(`character(1)`)\cr
JSON file path.}

\item{\code{datadir}}{(`character(1)`)\cr
Data directory path.}

\item{\code{publicdir}}{(`character(1)`)\cr
Public directory path.}

\item{\code{settings}}{(`character(1)`)\cr
Settings object path.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-load_json"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-load_json}{}}}
\subsection{Method \code{load_json()}}{
Loads patient metadata and plot data from a JSON file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$load_json(json_file)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{json_file}}{(`character(1)`)\cr
Datafiles.json file path.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-update_datafiles_json"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-update_datafiles_json}{}}}
\subsection{Method \code{update_datafiles_json()}}{
Update the JSON data files with current metadata and plot data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$update_datafiles_json()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-to_datatable"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-to_datatable}{}}}
\subsection{Method \code{to_datatable()}}{
Convert metadata and plots to a single data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$to_datatable(filter = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filter}}{(`character(1)`)\cr
Filter to apply.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(`data.table`).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-add_plots"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-add_plots}{}}}
\subsection{Method \code{add_plots()}}{
Add new plots to the PGVdb.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$add_plots(plots_to_add, overwrite = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plots_to_add}}{(`data.table`)\cr
Data table of plots to add.}

\item{\code{overwrite}}{(`logical(1)`)\cr
Overwrite existing files if TRUE.}

\item{\code{write_to_json}}{(`logical(1)`)\cr
Write to datafiles.json if TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-remove_plots"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-remove_plots}{}}}
\subsection{Method \code{remove_plots()}}{
Remove plots from the PGVdb.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$remove_plots(plots_to_remove, delete = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plots_to_remove}}{(`data.table`)\cr 
Data table of plots to remove}

\item{\code{delete}}{(`logical(1)`)\cr 
Delete plot files if TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-validate"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-validate}{}}}
\subsection{Method \code{validate()}}{
Validate metadata and plot data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-create_cov_arrow"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-create_cov_arrow}{}}}
\subsection{Method \code{create_cov_arrow()}}{
Create coverage arrow plot JSON file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$create_cov_arrow(plot_metadata, overwrite = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plot_metadata}}{(`data.table`)\cr 
Plot metadata.}

\item{\code{overwrite}}{(`logical(1)`)\cr 
Overwrite if file exists.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-create_ggraph_json"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-create_ggraph_json}{}}}
\subsection{Method \code{create_ggraph_json()}}{
Create gGraph JSON file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$create_ggraph_json(plot_metadata, overwrite = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plot_metadata}}{(`data.table`)\cr 
Plot metadata.}

\item{\code{overwrite}}{(`logical(1)`)\cr 
Overwrite if file exists.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-create_gwalk_json"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-create_gwalk_json}{}}}
\subsection{Method \code{create_gwalk_json()}}{
Create gWalk JSON file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$create_gwalk_json(plot_metadata, overwrite = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{plot_metadata}}{(`data.table`)\cr 
Plot metadata.}

\item{\code{overwrite}}{(`logical(1)`)\cr 
Overwrite if file exists.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-init_pgv"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-init_pgv}{}}}
\subsection{Method \code{init_pgv()}}{
Download and instantiate a PGV instance with symlinked data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$init_pgv(pgv_dir)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{pgv_dir}}{(`character(1)`)\cr 
Directory where the pgv instance will be installed}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-PGVdb-clone"></a>}}
\if{latex}{\out{\hypertarget{method-PGVdb-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{PGVdb$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
